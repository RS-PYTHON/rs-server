[project]
name = "rs-server"
version = "0.1.0"

[tool.poetry]
name = "rs-server"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.adoc"

packages = [
    { include = "src" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.11.0,<4.0"
moto = "==4.2.8"
boto3 = "==1.28.85"
botocore = "==1.31.85"
flask-cors = "^4.0.0"
requests = ">=2.31.0"
prefect = ">=2.13.8"
prefect-dask = "^0.2.5"
dask = "^2023.11.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^23.10.1"
ruff = "^0.1.3"
mypy = "^1.6.1"
pre-commit = "^3.5.0"

[tool.ruff.lint.extend-per-file-ignores]
# init should be empty, doesn't need any docstrings
"__init__.py" = ["D104"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.pytest.ini_options]
markers = [
    "unit", # mark a test as unittest
    "integration", # mark a test as integration test
]

[tool.ruff]
line-length = 120 # is it useful if not using ruff formatter ?

[tool.ruff.lint]
# F = PyFlake
# E = pycodestyle
# I = isort
# N = pep8 naming
# D = pydocstyle
# PL = pylint
select = ["F", "E", "I", "N", "D", "PL"]
ignore = ["D203", "D213"]
# TODO try to replace black by ruff formatter

[tool.mypy]
warn_unused_config = true
warn_redundant_casts = true
warn_unused_ignores = true
# Force analyze of partially annotate function signatures
check_untyped_defs = true

# TODO add the plugin if possible (request for example)
[[tool.mypy.overrides]]
module = "flask_bcrypt,flask_httpauth,requests.*"
ignore_missing_imports = true
