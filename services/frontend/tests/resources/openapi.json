{
  "openapi": "3.1.0",
  "info": {
    "title": "RS-Server",
    "version": "0.1.0"
  },
  "paths": {
    "/cadip/{station}/cadu": {
      "get": {
        "tags": [
          "CADIP stations"
        ],
        "summary": "Download Products",
        "description": "Initiate an asynchronous download process for a CADU product using EODAG.\n\nThis endpoint triggers the download of a CADU product identified by the given\nname of the file. It starts the download process in a separate thread\nusing the start_eodag_download function and updates the product's status in the database.",
        "operationId": "download_products_cadip__station__cadu_get",
        "parameters": [
          {
            "name": "station",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "CADIP station identifier (MTI, SGS, MPU, INU, etc)",
              "title": "Station"
            },
            "description": "CADIP station identifier (MTI, SGS, MPU, INU, etc)"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "CADU product name",
              "title": "Name"
            },
            "description": "CADU product name"
          },
          {
            "name": "local",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Local download directory",
              "title": "Local"
            },
            "description": "Local download directory"
          },
          {
            "name": "obs",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Object storage path e.g. 's3://bucket-name/sub/dir'",
              "title": "Obs"
            },
            "description": "Object storage path e.g. 's3://bucket-name/sub/dir'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CadipDownloadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cadip/{station}/cadu/search": {
      "get": {
        "tags": [
          "CADIP stations"
        ],
        "summary": "Search Products",
        "description": "Endpoint to retrieve a list of products from the CADU system for a specified station.\n\nNotes:\n    - The 'interval' parameter should be in ISO 8601 format.\n    - The response includes a JSON representation of the list of products for the specified station.\n    - In case of an invalid station identifier, a 400 Bad Request response is returned.",
        "operationId": "search_products_cadip__station__cadu_search_get",
        "parameters": [
          {
            "name": "station",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "CADIP station identifier (MTI, SGS, MPU, INU, etc)",
              "title": "Station"
            },
            "description": "CADIP station identifier (MTI, SGS, MPU, INU, etc)"
          },
          {
            "name": "datetime",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Time interval e.g. '2024-01-01T00:00:00Z/2024-01-02T23:59:59Z'",
              "title": "Datetime"
            },
            "description": "Time interval e.g. '2024-01-01T00:00:00Z/2024-01-02T23:59:59Z'"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of products to return",
              "default": 1000,
              "title": "Limit"
            },
            "description": "Maximum number of products to return"
          },
          {
            "name": "sortby",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort by +/-fieldName (ascending/descending)",
              "default": "-created",
              "title": "Sortby"
            },
            "description": "Sort by +/-fieldName (ascending/descending)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    {
                      "type": "object"
                    }
                  ],
                  "title": "Response Search Products Cadip  Station  Cadu Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cadip/{station}/cadu/status": {
      "get": {
        "tags": [
          "CADIP stations"
        ],
        "summary": "Get Download Status",
        "description": "Get a product download status from its ID or name.",
        "operationId": "get_download_status_cadip__station__cadu_status_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "CADU product name",
              "title": "Name"
            },
            "description": "CADU product name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadDownloadStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/adgs/aux": {
      "get": {
        "tags": [
          "ADGS stations"
        ],
        "summary": "Download Products",
        "description": "Initiate an asynchronous download process for an ADGS product using EODAG.\n\nThis endpoint triggers the download of an ADGS product identified by the given\nname of the file. It starts the download process in a separate thread\nusing the start_eodag_download function and updates the product's status in the database.",
        "operationId": "download_products_adgs_aux_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "AUX product name",
              "title": "Name"
            },
            "description": "AUX product name"
          },
          {
            "name": "local",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Local download directory",
              "title": "Local"
            },
            "description": "Local download directory"
          },
          {
            "name": "obs",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Object storage path e.g. 's3://bucket-name/sub/dir'",
              "title": "Obs"
            },
            "description": "Object storage path e.g. 's3://bucket-name/sub/dir'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdgsDownloadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/adgs/aux/search": {
      "get": {
        "tags": [
          "ADGS stations"
        ],
        "summary": "Search Products",
        "description": "Endpoint to handle the search for products in the AUX station within a specified time interval.\n\nThis function validates the input 'interval' format, performs a search for products using the ADGS provider,\nwrites the search results to the database, and generates a STAC Feature Collection from the products.\n\nNote:\n    - The 'interval' parameter should be in ISO 8601 format.\n    - The function utilizes the ADGS provider for product search and EODAG for STAC Feature Collection creation.\n    - Errors during the process will result in appropriate HTTP status codes and error messages.",
        "operationId": "search_products_adgs_aux_search_get",
        "parameters": [
          {
            "name": "datetime",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Time interval e.g. '2024-01-01T00:00:00Z/2024-01-02T23:59:59Z'",
              "title": "Datetime"
            },
            "description": "Time interval e.g. '2024-01-01T00:00:00Z/2024-01-02T23:59:59Z'"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of products to return",
              "default": 1000,
              "title": "Limit"
            },
            "description": "Maximum number of products to return"
          },
          {
            "name": "sortby",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort by +/-fieldName (ascending/descending)",
              "default": "-created",
              "title": "Sortby"
            },
            "description": "Sort by +/-fieldName (ascending/descending)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    {
                      "type": "object"
                    }
                  ],
                  "title": "Response Search Products Adgs Aux Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/adgs/aux/status": {
      "get": {
        "tags": [
          "ADGS stations"
        ],
        "summary": "Get Download Status",
        "description": "Get a product download status from its ID or name.",
        "operationId": "get_download_status_adgs_aux_status_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "AUX product name",
              "title": "Name"
            },
            "description": "AUX product name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadDownloadStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdgsDownloadResponse": {
        "properties": {
          "started": {
            "type": "boolean",
            "title": "Started"
          }
        },
        "type": "object",
        "required": [
          "started"
        ],
        "title": "AdgsDownloadResponse",
        "description": "Endpoint response"
      },
      "CadipDownloadResponse": {
        "properties": {
          "started": {
            "type": "boolean",
            "title": "Started"
          }
        },
        "type": "object",
        "required": [
          "started"
        ],
        "title": "CadipDownloadResponse",
        "description": "Endpoint response"
      },
      "EDownloadStatus": {
        "type": "string",
        "enum": [
          "NOT_STARTED",
          "IN_PROGRESS",
          "FAILED",
          "DONE"
        ],
        "title": "EDownloadStatus",
        "description": "Download status enumeration."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ReadDownloadStatus": {
        "properties": {
          "product_id": {
            "type": "string",
            "title": "Product Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "available_at_station": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Available At Station"
          },
          "db_id": {
            "type": "integer",
            "title": "Db Id"
          },
          "download_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Start"
          },
          "download_stop": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Stop"
          },
          "status": {
            "$ref": "#/components/schemas/EDownloadStatus"
          },
          "status_fail_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Fail Message"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "name",
          "available_at_station",
          "db_id",
          "status"
        ],
        "title": "ReadDownloadStatus",
        "description": "DownloadStatus fields that are known when reading but not when creating the object."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}
