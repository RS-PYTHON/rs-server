{
  "openapi": "3.1.0",
  "info": {
    "title": "RS-server",
    "version": "0.0.0"
  },
  "paths": {
    "/_mgmt/ping": {
      "get": {
        "tags": [
          "Liveliness/Readiness"
        ],
        "summary": "Ping",
        "description": "Liveliness/readiness probe.",
        "operationId": "ping__mgmt_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/catalog/{owner_id}/": {
      "get": {
        "summary": "Landing Page",
        "description": "Endpoint.",
        "operationId": "Landing_Page__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ],
        "parameters": [
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ]
      }
    },
    "/catalog/{owner_id}/conformance": {
      "get": {
        "summary": "Conformance Classes",
        "description": "Endpoint.",
        "operationId": "Conformance_Classes_conformance_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ],
        "parameters": [
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ]
      }
    },
    "/catalog/{owner_id}/collections/{collection_id}/items/{item_id}": {
      "get": {
        "summary": "Get Item",
        "description": "Endpoint.",
        "operationId": "Get_Item_collections__collection_id__items__item_id__get",
        "parameters": [
          {
            "description": "Collection ID",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id",
              "description": "Collection ID"
            },
            "name": "collection_id",
            "in": "path"
          },
          {
            "description": "Item ID",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id",
              "description": "Item ID"
            },
            "name": "item_id",
            "in": "path"
          },
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/geo+json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ]
      },
      "put": {
        "tags": [
          "Transaction Extension"
        ],
        "summary": "Update Item",
        "description": "Endpoint.",
        "operationId": "Update_Item_collections__collection_id__items__item_id__put",
        "parameters": [
          {
            "description": "Collection ID",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id",
              "description": "Collection ID"
            },
            "name": "collection_id",
            "in": "path"
          },
          {
            "description": "Item ID",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id",
              "description": "Item ID"
            },
            "name": "item_id",
            "in": "path"
          },
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Transaction Extension"
        ],
        "summary": "Delete Item",
        "description": "Endpoint.",
        "operationId": "Delete_Item_collections__collection_id__items__item_id__delete",
        "parameters": [
          {
            "description": "Collection ID",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id",
              "description": "Collection ID"
            },
            "name": "collection_id",
            "in": "path"
          },
          {
            "description": "Item ID",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id",
              "description": "Item ID"
            },
            "name": "item_id",
            "in": "path"
          },
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ]
      }
    },
    "/catalog/search": {
      "get": {
        "summary": "Search",
        "description": "Endpoint /catalog/search. The filter-lang parameter is cql2-text by default.",
        "operationId": "Search_search_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Collections"
            },
            "name": "collections",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Ids"
            },
            "name": "ids",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Bbox"
            },
            "name": "bbox",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Intersects"
            },
            "name": "intersects",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Datetime"
            },
            "name": "datetime",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Query"
            },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Sortby"
            },
            "name": "sortby",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Fields"
            },
            "name": "fields",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            },
            "name": "token",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Filter"
            },
            "name": "filter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/geo+json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ]
      },
      "post": {
        "summary": "Search",
        "description": "Endpoint.",
        "operationId": "Search_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchPostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/geo+json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ]
      }
    },
    "/catalog/{owner_id}/collections": {
      "get": {
        "summary": "Get Collections",
        "description": "Endpoint.",
        "operationId": "Get_Collections_collections_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ],
        "parameters": [
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ]
      },
      "put": {
        "tags": [
          "Transaction Extension"
        ],
        "summary": "Update Collection",
        "description": "Endpoint.",
        "operationId": "Update_Collection_collections_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ],
        "parameters": [
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ]
      },
      "post": {
        "tags": [
          "Transaction Extension"
        ],
        "summary": "Create Collection",
        "description": "Endpoint.",
        "operationId": "Create_Collection_collections_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ],
        "parameters": [
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ]
      }
    },
    "/catalog/{owner_id}/collections/{collection_id}": {
      "get": {
        "summary": "Get Collection",
        "description": "Endpoint.",
        "operationId": "Get_Collection_collections__collection_id__get",
        "parameters": [
          {
            "description": "Collection ID",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id",
              "description": "Collection ID"
            },
            "name": "collection_id",
            "in": "path"
          },
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Transaction Extension"
        ],
        "summary": "Delete Collection",
        "description": "Endpoint.",
        "operationId": "Delete_Collection_collections__collection_id__delete",
        "parameters": [
          {
            "description": "Collection ID",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id",
              "description": "Collection ID"
            },
            "name": "collection_id",
            "in": "path"
          },
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ]
      }
    },
    "/catalog/{owner_id}/collections/{collection_id}/items": {
      "get": {
        "summary": "Get Itemcollection",
        "description": "Endpoint.",
        "operationId": "Get_ItemCollection_collections__collection_id__items_get",
        "parameters": [
          {
            "description": "Collection ID",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id",
              "description": "Collection ID"
            },
            "name": "collection_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Limit",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Bbox"
            },
            "name": "bbox",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Datetime"
            },
            "name": "datetime",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            },
            "name": "token",
            "in": "query"
          },
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/geo+json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ]
      },
      "post": {
        "tags": [
          "Transaction Extension"
        ],
        "summary": "Create Item",
        "description": "Endpoint.",
        "operationId": "Create_Item_collections__collection_id__items_post",
        "parameters": [
          {
            "description": "Collection ID",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id",
              "description": "Collection ID"
            },
            "name": "collection_id",
            "in": "path"
          },
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/Item"
                  },
                  {
                    "$ref": "#/components/schemas/ItemCollection"
                  }
                ],
                "title": "Item"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ]
      }
    },
    "/catalog/{owner_id}/queryables": {
      "get": {
        "tags": [
          "Filter Extension"
        ],
        "summary": "Queryables",
        "description": "Endpoint.",
        "operationId": "Queryables_queryables_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ],
        "parameters": [
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ]
      }
    },
    "/catalog/{owner_id}/collections/{collection_id}/queryables": {
      "get": {
        "tags": [
          "Filter Extension"
        ],
        "summary": "Collection Queryables",
        "description": "Endpoint.",
        "operationId": "Collection_Queryables_collections__collection_id__queryables_get",
        "parameters": [
          {
            "description": "Collection ID",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id",
              "description": "Collection ID"
            },
            "name": "collection_id",
            "in": "path"
          },
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ]
      }
    },
    "/catalog/{owner_id}/collections/{collection_id}/bulk_items": {
      "post": {
        "tags": [
          "Bulk Transaction Extension"
        ],
        "summary": "Bulk Create Item",
        "description": "Endpoint.",
        "operationId": "Bulk_Create_Item_collections__collection_id__bulk_items_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Items"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Bulk Create Item Collections  Collection Id  Bulk Items Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API key passed in HTTP header": []
          }
        ],
        "parameters": [
          {
            "description": "Catalog owner id",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Catalog owner id",
              "description": "Catalog owner id"
            },
            "name": "owner_id",
            "in": "path"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BulkTransactionMethod": {
        "type": "string",
        "enum": [
          "insert",
          "upsert"
        ],
        "title": "BulkTransactionMethod",
        "description": "Bulk Transaction Methods."
      },
      "FilterLang": {
        "type": "string",
        "enum": [
          "cql-json",
          "cql2-json",
          "cql2-text"
        ],
        "title": "FilterLang",
        "description": "Choices for filter-lang value in a POST request.\n\nBased on\nhttps://github.com/stac-api-extensions/filter#queryables\n\nNote the addition of cql2-json, which is used by the pgstac backend,\nbut is not included in the spec above."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Item": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Feature"
            ],
            "title": "Type"
          },
          "stac_version": {
            "type": "string",
            "title": "Stac Version"
          },
          "stac_extensions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Stac Extensions"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "geometry": {
            "type": "object",
            "title": "Geometry"
          },
          "bbox": {
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Bbox"
          },
          "properties": {
            "type": "object",
            "title": "Properties"
          },
          "links": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Links"
          },
          "assets": {
            "type": "object",
            "title": "Assets"
          },
          "collection": {
            "type": "string",
            "title": "Collection"
          }
        },
        "type": "object",
        "title": "Item"
      },
      "ItemCollection": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "FeatureCollection"
            ],
            "title": "Type"
          },
          "features": {
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "type": "array",
            "title": "Features"
          },
          "links": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Links"
          },
          "context": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Context"
          }
        },
        "type": "object",
        "title": "ItemCollection"
      },
      "Items": {
        "properties": {
          "items": {
            "type": "object",
            "title": "Items",
            "extra": {}
          },
          "method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BulkTransactionMethod"
              }
            ],
            "default": "insert",
            "extra": {}
          }
        },
        "type": "object",
        "title": "Items",
        "description": "A group of STAC Item objects, in the form of a dictionary from Item.id -> Item."
      },
      "LineString": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "LineString"
            ],
            "title": "Type"
          },
          "coordinates": {
            "items": {
              "anyOf": [
                {
                  "items": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 2
                },
                {
                  "items": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "type": "array",
                  "maxItems": 3,
                  "minItems": 3
                }
              ]
            },
            "type": "array",
            "minItems": 2,
            "title": "Coordinates"
          },
          "bbox": {
            "anyOf": [
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 4,
                "minItems": 4
              },
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 6,
                "minItems": 6
              }
            ],
            "title": "Bbox"
          }
        },
        "type": "object",
        "required": [
          "type",
          "coordinates"
        ],
        "title": "LineString",
        "description": "LineString Model"
      },
      "MultiLineString": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "MultiLineString"
            ],
            "title": "Type"
          },
          "coordinates": {
            "items": {
              "items": {
                "anyOf": [
                  {
                    "items": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array",
                    "maxItems": 2,
                    "minItems": 2
                  },
                  {
                    "items": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array",
                    "maxItems": 3,
                    "minItems": 3
                  }
                ]
              },
              "type": "array",
              "minItems": 2
            },
            "type": "array",
            "title": "Coordinates"
          },
          "bbox": {
            "anyOf": [
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 4,
                "minItems": 4
              },
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 6,
                "minItems": 6
              }
            ],
            "title": "Bbox"
          }
        },
        "type": "object",
        "required": [
          "type",
          "coordinates"
        ],
        "title": "MultiLineString",
        "description": "MultiLineString Model"
      },
      "MultiPoint": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "MultiPoint"
            ],
            "title": "Type"
          },
          "coordinates": {
            "items": {
              "anyOf": [
                {
                  "items": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 2
                },
                {
                  "items": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "type": "array",
                  "maxItems": 3,
                  "minItems": 3
                }
              ]
            },
            "type": "array",
            "title": "Coordinates"
          },
          "bbox": {
            "anyOf": [
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 4,
                "minItems": 4
              },
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 6,
                "minItems": 6
              }
            ],
            "title": "Bbox"
          }
        },
        "type": "object",
        "required": [
          "type",
          "coordinates"
        ],
        "title": "MultiPoint",
        "description": "MultiPoint Model"
      },
      "MultiPolygon": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "MultiPolygon"
            ],
            "title": "Type"
          },
          "coordinates": {
            "items": {
              "items": {
                "items": {
                  "anyOf": [
                    {
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array",
                      "maxItems": 2,
                      "minItems": 2
                    },
                    {
                      "items": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "number"
                        }
                      ],
                      "type": "array",
                      "maxItems": 3,
                      "minItems": 3
                    }
                  ]
                },
                "type": "array",
                "minItems": 4
              },
              "type": "array"
            },
            "type": "array",
            "title": "Coordinates"
          },
          "bbox": {
            "anyOf": [
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 4,
                "minItems": 4
              },
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 6,
                "minItems": 6
              }
            ],
            "title": "Bbox"
          }
        },
        "type": "object",
        "required": [
          "type",
          "coordinates"
        ],
        "title": "MultiPolygon",
        "description": "MultiPolygon Model"
      },
      "Point": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Point"
            ],
            "title": "Type"
          },
          "coordinates": {
            "anyOf": [
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 2,
                "minItems": 2
              },
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 3,
                "minItems": 3
              }
            ],
            "title": "Coordinates"
          },
          "bbox": {
            "anyOf": [
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 4,
                "minItems": 4
              },
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 6,
                "minItems": 6
              }
            ],
            "title": "Bbox"
          }
        },
        "type": "object",
        "required": [
          "type",
          "coordinates"
        ],
        "title": "Point",
        "description": "Point Model"
      },
      "Polygon": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Polygon"
            ],
            "title": "Type"
          },
          "coordinates": {
            "items": {
              "items": {
                "anyOf": [
                  {
                    "items": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array",
                    "maxItems": 2,
                    "minItems": 2
                  },
                  {
                    "items": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "type": "array",
                    "maxItems": 3,
                    "minItems": 3
                  }
                ]
              },
              "type": "array",
              "minItems": 4
            },
            "type": "array",
            "title": "Coordinates"
          },
          "bbox": {
            "anyOf": [
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 4,
                "minItems": 4
              },
              {
                "items": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "number"
                  }
                ],
                "type": "array",
                "maxItems": 6,
                "minItems": 6
              }
            ],
            "title": "Bbox"
          }
        },
        "type": "object",
        "required": [
          "type",
          "coordinates"
        ],
        "title": "Polygon",
        "description": "Polygon Model"
      },
      "PostFieldsExtension": {
        "properties": {
          "include": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true,
            "title": "Include",
            "default": []
          },
          "exclude": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true,
            "title": "Exclude",
            "default": []
          }
        },
        "type": "object",
        "title": "PostFieldsExtension",
        "description": "FieldsExtension.\n\nAttributes:\n    include: set of fields to include.\n    exclude: set of fields to exclude."
      },
      "SearchPostRequest": {
        "properties": {
          "collections": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Collections",
            "extra": {}
          },
          "ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ids",
            "extra": {}
          },
          "bbox": {
            "anyOf": [
              {
                "items": [
                  {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  }
                ],
                "type": "array",
                "maxItems": 4,
                "minItems": 4
              },
              {
                "items": [
                  {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  }
                ],
                "type": "array",
                "maxItems": 6,
                "minItems": 6
              }
            ],
            "title": "Bbox",
            "extra": {}
          },
          "intersects": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Point"
              },
              {
                "$ref": "#/components/schemas/MultiPoint"
              },
              {
                "$ref": "#/components/schemas/LineString"
              },
              {
                "$ref": "#/components/schemas/MultiLineString"
              },
              {
                "$ref": "#/components/schemas/Polygon"
              },
              {
                "$ref": "#/components/schemas/MultiPolygon"
              }
            ],
            "title": "Intersects",
            "extra": {}
          },
          "datetime": {
            "type": "string",
            "title": "Datetime",
            "extra": {}
          },
          "limit": {
            "type": "integer",
            "maximum": 10000.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 10,
            "extra": {}
          },
          "conf": {
            "type": "object",
            "title": "Conf",
            "extra": {}
          },
          "query": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object",
            "title": "Query",
            "extra": {}
          },
          "sortby": {
            "items": {
              "$ref": "#/components/schemas/SortExtension"
            },
            "type": "array",
            "title": "Sortby",
            "extra": {}
          },
          "fields": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PostFieldsExtension"
              }
            ],
            "title": "Fields",
            "default": {
              "include": [],
              "exclude": []
            },
            "extra": {}
          },
          "token": {
            "type": "string",
            "title": "Token",
            "extra": {}
          },
          "filter": {
            "type": "object",
            "title": "Filter",
            "extra": {}
          },
          "filter-crs": {
            "type": "string",
            "title": "Filter-Crs",
            "extra": {}
          },
          "filter-lang": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterLang"
              }
            ],
            "default": "cql-json",
            "extra": {}
          }
        },
        "type": "object",
        "title": "SearchPostRequest",
        "description": "Search model.\n\nOverrides the validation for datetime from the base request model."
      },
      "SortDirections": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ],
        "title": "SortDirections",
        "description": "An enumeration."
      },
      "SortExtension": {
        "properties": {
          "field": {
            "type": "string",
            "minLength": 1,
            "title": "Field"
          },
          "direction": {
            "$ref": "#/components/schemas/SortDirections"
          }
        },
        "type": "object",
        "required": [
          "field",
          "direction"
        ],
        "title": "SortExtension",
        "description": "https://github.com/radiantearth/stac-api-spec/tree/master/extensions/sort#sort-api-extension"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "API key passed in HTTP header": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}
