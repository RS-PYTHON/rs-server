[project]
name = "rs-server-staging"
version = "0.0.0" # see: https://github.com/mtkennerly/poetry-dynamic-versioning

[tool.poetry]
name = "rs-server-staging"
version = "0.0.0"
description = "Copernicus Sentinel rs-server, staging service."
license = "Apache-2.0"
authors = ["ESA under contract with Airbus and CS <ops_coprs@airbus.com>"]
readme = "README.md"
homepage = "https://home.rs-python.eu/"
repository = "https://github.com/RS-PYTHON/rs-server"
documentation = "https://home.rs-python.eu/rs-documentation/rs-server/docs/doc/"
keywords = ["stac", "copernicus", "sentinel", "processing"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: FastAPI",
    "Framework :: OpenTelemetry",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Image Processing"
]

packages = [
    { include = "rs_server_staging" },
    { include = "tests", format = "sdist" },
]

# Add configuration files to the .whl package
include = [
    { path = "config", format = ["wheel"] }
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.0"
pygeoapi = "^0.17.0"
tinydb = "^4.8.0"
uvicorn = "^0.30.6"
opentelemetry-distro = "^0.48b0" # then run 'poetry run opentelemetry-bootstrap -a install'
opentelemetry-instrumentation-aws-lambda = "^0.48b0"
opentelemetry-test-utils = "^0.48b0"
opentelemetry-exporter-otlp = "^1.27.0"
python-logging-loki = "^0.3.1"
stac-pydantic = "2.0.0"
aiohttp = "^3.10.5"
dask = {extras = ["distributed"], version = "^2024.9.1"}
dask-gateway = "^2024.1.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
python = "^3.11"
pre-commit = "^3.7.1"
bandit = "^1.7.9"
pylint = "^3.3.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
pytest-docker = "^3.1.0"
pytest-error-for-skips = "^2.0.2"
pytest-httpx = "^0.32.0"
pytest-mock = "^3.12.0"

[tool.black]
line-length = 120

[tool.flake8]
max-line-length = 120

[tool.pylint]
max-line-length = 120

[tool.pytest.ini_options]
markers = [
    "unit", # mark a test as unittest
    "integration", # mark a test as integration test
]

[tool.mypy]
warn_redundant_casts = true
# Force analyze of partially annotate function signatures
check_untyped_defs = true
ignore_missing_imports = true

[tool.poetry-dynamic-versioning] # needs: poetry self add "poetry-dynamic-versioning[plugin]"
enable = true
metadata = false

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"
