[project]
name = "rs-server-catalog"
version = "0.0.0" # see: https://github.com/mtkennerly/poetry-dynamic-versioning

[tool.poetry]
name = "rs-server-catalog"
version = "0.0.0"
description = "Copernicus Sentinel rs-server, STAC catalog."
license = "Apache-2.0"
authors = ["ESA under contract with Airbus and CS <ops_coprs@airbus.com>"]
readme = "README.md"
homepage = "https://home.rs-python.eu/"
repository = "https://github.com/RS-PYTHON/rs-server"
documentation = "https://home.rs-python.eu/rs-documentation/rs-server/docs/doc/"
keywords = ["stac", "copernicus", "sentinel", "processing"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: FastAPI",
    "Framework :: OpenTelemetry",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Image Processing"
]

packages = [
    { include = "rs_server_catalog" },
    { include = "tests", format = "sdist" },
]

# Add configuration files to the .whl package
include = [
    { path = "config", format = ["wheel"] }
]

[tool.poetry.dependencies]
python = "^3.11"
stac-fastapi-pgstac = "3.0.0"
pygeofilter = "^0.2.4"
rs-server-common = {path = "../common", develop = true}

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
# Formatting
black = "^24.8.0"
# Testing
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-error-for-skips = "^2.0.2"
pytest-docker = "^3.1.0"
pytest-dotenv = "^0.5.2"
pytest-mock = "^3.14.0"
moto = "==5.0.17"
flask = "^3.0.3"
flask-cors = "^5.0.0"
# httpx is used by fastapi for test purpose
httpx = "^0.27.0"
# sqlalchemy-utils is used for pgstac test purpose
sqlalchemy-utils = "^0.41.2"
psycopg2 = "^2.9.9"
pytest-httpx = "^0.32.0"
pytest-asyncio = "^0.24.0"


[tool.black]
line-length = 120


[tool.pytest.ini_options]
markers = [
    "unit", # mark a test as unittest
    "integration", # mark a test as integration test
]
# pgstac and stac-fastapi env file for test purpose
env_files = [
    "tests/.env"
]
asyncio_mode = "auto"


[tool.poetry-dynamic-versioning] # needs: poetry self add "poetry-dynamic-versioning[plugin]"
enable = true
metadata = false

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"
