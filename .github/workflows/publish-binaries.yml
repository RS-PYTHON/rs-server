name: Publish wheels and Docker images

# TODO: is it possible to run this workflow only if the check-code-quality workflow has completed successfully ?
# I've tried workflow_run but see:
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run
# Note: This event will only trigger a workflow run if the workflow file is on the default branch.

# Run workflow only for new git tags (including hierarchical tags like v1.0/beta), or manually
on:
  push:
    tags:
      - '**'
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.11
  DOCKER_REGISTRY: ghcr.io

jobs:

  ##################
  # Publish wheels #
  ##################

  rs-server-whl:
    runs-on: ubuntu-latest
    name: "'rs-server' wheel"
    outputs:
      version_name: ${{ steps.publish-wheel.outputs.version_name }}
      package_name: ${{ steps.publish-wheel.outputs.package_name }}
    continue-on-error: true # TODO remove when the right python repo will be set
    steps:
      - uses: actions/checkout@v4
      - id: publish-wheel
        uses: ./.github/actions/publish-wheel

  services-common-whl:
    runs-on: ubuntu-latest
    name: "'services/common' wheel"
    outputs:
      version_name: ${{ steps.publish-wheel.outputs.version_name }}
      package_name: ${{ steps.publish-wheel.outputs.package_name }}
    continue-on-error: true # TODO remove when the right python repo will be set
    steps:
      - uses: actions/checkout@v4
      - id: publish-wheel
        uses: ./.github/actions/publish-wheel
        with:
          package_directory: services/common

  services-cadip-whl:
    runs-on: ubuntu-latest
    name: "'services/cadip' wheel"
    outputs:
      version_name: ${{ steps.publish-wheel.outputs.version_name }}
      package_name: ${{ steps.publish-wheel.outputs.package_name }}
    continue-on-error: true # TODO remove when the right python repo will be set
    steps:
      - uses: actions/checkout@v4

      # Hack the pyproject.toml. TODO: find a cleaner to do this.
      # Replace '<dep> = {path = "./relative/path", develop = true}' by '<dep> = "*"'.
      - run: sed -i "s|^.*rs-server-common.*path.*$|rs-server-common = \"\*\"|g"  services/cadip/pyproject.toml

      - id: publish-wheel
        uses: ./.github/actions/publish-wheel
        with:
          package_directory: services/cadip

  #########################
  # Publish Docker images #
  #########################

  rs-server-img:
    runs-on: ubuntu-latest
    name: "'rs-server' Docker image"
    needs: [rs-server-whl]
    permissions: write-all
    outputs:
      docker_image: ${{ steps.publish-docker.outputs.docker_image}}
    steps:
      - uses: actions/checkout@v4

      # Download .whl files into ./whl/
      - name: Download .whl dependencies
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.rs-server-whl.outputs.package_name }}
          path: ./whl

      - id: publish-docker
        uses: ./.github/actions/publish-docker
        with:
          dockerfile: Dockerfile.POC
          build_context_path: ./whl
          image_suffix: # no suffix
          version_name: ${{ needs.rs-server-whl.outputs.version_name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  test-pull-rs-server-img:
    runs-on: ubuntu-latest
    name: Test pulling the 'rs-server' Docker image and run 'pip list'
    needs: [rs-server-img]
    container: ${{ needs.rs-server-img.outputs.docker_image }}
    steps:
      - run: pip list

  services-cadip-img:
    runs-on: ubuntu-latest
    name: "'services/cadip' Docker image"
    needs: [services-common-whl, services-cadip-whl]
    permissions: write-all
    outputs:
      docker_image: ${{ steps.publish-docker.outputs.docker_image}}
    steps:
      - uses: actions/checkout@v4

      # Download .whl files into ./whl/
      - name: Download .whl dependencies
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.services-common-whl.outputs.package_name }}
          path: ./whl
      - name: Download .whl dependencies
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.services-cadip-whl.outputs.package_name }}
          path: ./whl

      - id: publish-docker
        uses: ./.github/actions/publish-docker
        with:
          dockerfile: ./services/cadip/Dockerfile.POC
          build_context_path: ./whl
          image_suffix: _services-cadip
          version_name: ${{ needs.services-cadip-whl.outputs.version_name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  test-pull-services-cadip-img:
    runs-on: ubuntu-latest
    name: Test pulling the 'services/cadip' Docker image and run 'pip list'
    needs: [services-cadip-img]
    container: ${{ needs.services-cadip-img.outputs.docker_image }}
    steps:
      - run: pip list

  ##########
  # Others #
  ##########

  message:
    runs-on: ubuntu-latest
    name: Information
    needs: [rs-server-img, services-cadip-img]
    steps:

      # Display link to Trivy results in the github security tab.
      # This linke doesn't work for pull requests, it should be e.g. 'pr:13' not '13/merge'
      - if: github.event_name != 'pull_request'
        run: >
          echo "Trivy scan results:
          https://github.com/${{ github.repository }}/security/code-scanning?query=is:open+branch:${{ github.ref_name }}"
          >> $GITHUB_STEP_SUMMARY
        shell: bash
