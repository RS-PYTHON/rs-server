name: publish-docker
description: Publish Docker image

inputs:
  dockerfile:
    description: Dockerfile path
    required: true
  build_context_path:
    description: "'docker build' context path"
    required: true
  version_name:
    description: Version name e.g. 1.2.3a4.dev1a2b3c4d
    required: true

# Copied from https://github.com/COPRS/reference-system-software/blob/dependencies
# and https://github.com/COPRS/reference-system-software/blob/trivy-security-scan-v1/action.yml

runs:
  using: "composite"
  steps:

    # Extract metadata from Git reference and GitHub events
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_IMAGE_NAME }}

    # Build Docker image using Buildx
    # This Action automatically pulls the code from the branch it's launched from
    - name: Build image
      uses: docker/build-push-action@v5
      with:
        context: ./dist
        file: ${{ inputs.dockerfile }}
        load: true
        tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ inputs.version_name }}
        labels: ${{ steps.meta.outputs.labels }}

#     - name: Scan image
#       uses: anchore/scan-action@v2
#       id: scan
#       with:
#         image: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}_cadip
#         acs-report-enable: true
#         fail-build: true
#         severity-cutoff: critical

#     - name: Upload Anchore scan SARIF report
#       uses: github/codeql-action/upload-sarif@v1
#       if: always()
#       with:
#         sarif_file: ${{ steps.scan.outputs.sarif }}

#     - name: Upload Anchore scan json report
#       uses: actions/upload-artifact@master
#       if: always()
#       with:
#         name: vulnerabilities
#         path: ${{ steps.scan.outputs.vulnerabilities }}

#     # Login against a Docker registry except on PR
#     # https://github.com/docker/login-action
#     - name: Log into registry ${{ env.DOCKER_REGISTRY }}
#       if: github.event_name != 'pull_request'
#       uses: docker/login-action@v3
#       with:
#         registry: ${{ env.DOCKER_REGISTRY }}
#         username: ${{ github.actor }}
#         password: ${{ secrets.GITHUB_TOKEN }}

#     - name: Push image
#       run: |
#         docker push ${{ fromJSON(steps.meta.outputs.json).tags[0] }}_cadip ;

# generate_reports:
#   needs: build
#   runs-on: ubuntu-latest
#   permissions:
#     contents: read

#   steps:
#     - name: Download json report from build job
#       uses: actions/download-artifact@v3
#       with:
#         name: vulnerabilities

#     - name: Generate CSV and intermediate HTML report
#       run: |
#         echo "SEVERITY;ID;PACKAGE;VERSION;LINK" > vulnerabilities.csv
#         cat vulnerabilities.json | jq -r '.matches[] | "\(.vulnerability.severity);\(.vulnerability.id);\(.artifact.name);\(.artifact.version);\(.vulnerability.links[0])"' >> vulnerabilities.csv
#         echo -e '<table>\n<thead>\n<tr class="header">\n<th><p>SEVERITY</p></th>\n<th><p>ID</p></th>\n<th><p>PACKAGE</p></th>\n<th><p>VERSION</p></th>\n</tr>\n</thead>\n<tbody>' > vulnerabilities.html
#         cat vulnerabilities.json | jq -r '.matches[] | "<tr>;<td><p>\(.vulnerability.severity)</p></td>;<td><p><a href=\"\(.vulnerability.links[0])\">\(.vulnerability.id)</a></p></td>;<td><p>\(.artifact.name)</p></td>;<td><p>\(.artifact.version)</p></td>;</tr>"' | tr -s ';' '\n' | sed 's!><p>Negligible! style="background-color:#FFFFFF;"><p>Negligible!g' | sed 's!><p>Low! style="background-color:#FFFC9E;"><p>Low!g' | sed 's!><p>Medium! style="background-color:#FE996B;"><p>Medium!g' | sed 's!><p>High! style="background-color:#FD6864;"><p>High!g' | sed 's!><p>Critical! style="background-color:#FE0000;"><p>Critical!g' >> vulnerabilities.html
#         echo -e '</tbody>\n</table>' >> vulnerabilities.html

#     - name: Convert HTLM to PDF
#       uses: docker://ghcr.io/coprs/reference-system:dependencies_wkhtmltopdf
#       with:
#         args: vulnerabilities.html vulnerabilities.pdf

#     - name: Upload Anchore scan reports
#       uses: actions/upload-artifact@master
#       with:
#         name: vulnerabilities
#         path: |
#           vulnerabilities.csv
#           vulnerabilities.pdf
#           vulnerabilities.json
